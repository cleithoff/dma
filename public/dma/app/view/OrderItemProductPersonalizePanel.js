/*
 * File: app/view/OrderItemProductPersonalizePanel.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.OrderItemProductPersonalizePanel', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.orderitemproductpersonalizepanel',

    height: 250,
    itemId: 'OrderItemProductPersonalizePanel',
    width: 400,
    title: 'Personalisierung',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    itemId: 'OrderItemProductPersonalizeToolbar',
                    items: [
                        {
                            xtype: 'button',
                            disabled: true,
                            itemId: 'OrderItemProductPersonalizeEditButton',
                            text: 'Bearbeiten',
                            listeners: {
                                afterrender: {
                                    fn: me.onOrderItemProductPersonalizeEditButtonAfterRender,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            disabled: true,
                            itemId: 'OrderItemProductPersonalizeNewButton',
                            text: 'Neu',
                            listeners: {
                                afterrender: {
                                    fn: me.onOrderItemProductPersonalizeNewButtonAfterRender,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            disabled: true,
                            itemId: 'OrderItemProductPersonalizeSaveButton',
                            text: 'Speichern',
                            listeners: {
                                afterrender: {
                                    fn: me.onOrderItemProductPersonalizeSaveButtonAfterRender,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            disabled: true,
                            itemId: 'OrderItemProductPersonalizeCancelButton',
                            text: 'Abbrechen',
                            listeners: {
                                afterrender: {
                                    fn: me.onOrderItemProductPersonalizeCancelButtonAfterRender,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            disabled: true,
                            itemId: 'OrderItemProductPersonalizeDeleteButton',
                            text: 'Löschen',
                            listeners: {
                                afterrender: {
                                    fn: me.onOrderItemProductPersonalizeDeleteButtonAfterRender,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'form',
                    disabled: true,
                    itemId: 'OrderItemProductPersonalizeFormPanel',
                    bodyPadding: 10,
                    items: [
                        {
                            xtype: 'combobox',
                            anchor: '100%',
                            itemId: 'OrderItemProductPersonalizeComboBox',
                            fieldLabel: 'Schlüssel',
                            name: 'product_personalize_id',
                            displayField: 'key',
                            store: 'ProductLayoutHasProductPersonalizeJsonStore',
                            triggerAction: 'query',
                            valueField: 'product_personalize_id'
                        },
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            fieldLabel: 'Wert',
                            name: 'value'
                        },
                        {
                            xtype: 'hiddenfield',
                            anchor: '100%',
                            fieldLabel: 'Label',
                            name: 'product_layout_id'
                        }
                    ]
                },
                {
                    xtype: 'gridpanel',
                    itemId: 'OrderItemProductPersonalizeGridPanel',
                    columnLines: true,
                    store: 'OrderItemHasProductPersonalizeJsonStore',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            width: 200,
                            dataIndex: 'key',
                            text: 'Schlüssel'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (!Ext.isEmpty(record.data.value, false)) {
                                    return record.data.value.length;
                                }

                                return '';
                            },
                            width: 70,
                            align: 'right',
                            text: '#Zeichen'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'value',
                            text: 'Wert',
                            flex: 1
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onOrderItemProductPersonalizeEditButtonAfterRender: function(component, eOpts) {
        component.setVisible(MyApp.app.getRuleControllerController().allow('OrderItemProductPersonalizePanel', MyApp.app.getRuleControllerController().rights.UPDATE));
    },

    onOrderItemProductPersonalizeNewButtonAfterRender: function(component, eOpts) {
        component.setVisible(MyApp.app.getRuleControllerController().allow('OrderItemProductPersonalizePanel', MyApp.app.getRuleControllerController().rights.CREATE));
    },

    onOrderItemProductPersonalizeSaveButtonAfterRender: function(component, eOpts) {
        component.setVisible(MyApp.app.getRuleControllerController().allow('OrderItemProductPersonalizePanel', MyApp.app.getRuleControllerController().rights.CREATE | MyApp.app.getRuleControllerController().rights.UPDATE));
    },

    onOrderItemProductPersonalizeCancelButtonAfterRender: function(component, eOpts) {
        component.setVisible(MyApp.app.getRuleControllerController().allow('OrderItemProductPersonalizePanel', MyApp.app.getRuleControllerController().rights.CREATE | MyApp.app.getRuleControllerController().rights.UPDATE));
    },

    onOrderItemProductPersonalizeDeleteButtonAfterRender: function(component, eOpts) {
        component.setVisible(MyApp.app.getRuleControllerController().allow('OrderItemProductPersonalizePanel', MyApp.app.getRuleControllerController().rights.DELETE));
    }

});