/*
 * File: app/view/ReportPanel.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.ReportPanel', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.reportpanel',

    height: 250,
    itemId: 'ReportPanel',
    width: 400,
    layout: {
        type: 'border'
    },
    closable: true,
    closeAction: 'hide',
    title: 'Reporte',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    region: 'west',
                    split: true,
                    itemId: 'ReportReportGridPanel',
                    width: 150,
                    store: 'ReportReportJsonStore',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'title',
                            text: 'Report',
                            flex: 1
                        }
                    ],
                    listeners: {
                        select: {
                            fn: me.onReportReportGridPanelSelect,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'tabpanel',
                    region: 'center',
                    split: true,
                    itemId: 'ReportReportTabPanel'
                }
            ]
        });

        me.callParent(arguments);
    },

    onReportReportGridPanelSelect: function(rowmodel, record, index, eOpts) {
        var me = this;

        var panel = me.down('#ReportReportPanel');

        var panelReportAdditional = me.down('#ReportAdditionalPanel');

        panelReportAdditional.record = record;

        var storeReportAdditional = panelReportAdditional.down('#ReportAdditionalGridPanel').getStore();

        storeReportAdditional.clearFilter(true);
        storeReportAdditional.filter([{property:"report_report_id",value:record.data.id}]);
        storeReportAdditional.load({
            callback: function(records, operation, success) {
                if (records.length > 0) {
                    panelReportAdditional.down('#ReportAdditionalGridPanel').getSelectionModel().select(0);
                }
            }
        });


        var formPanel = panel.getComponent('ReportReportFormPanel');
        var toolbar = panel.getComponent('ReportReportToolbar');
        formPanel.getForm().loadRecord(record);
        toolbar.getComponent('ReportReportEditButton').enable();
        toolbar.getComponent('ReportReportNewButton').enable();
        toolbar.getComponent('ReportReportCancelButton').disable();
        toolbar.getComponent('ReportReportSaveButton').disable();
        toolbar.getComponent('ReportReportDeleteButton').enable();

        toolbar.getComponent('ReportReportPreviewButton').enable();
        toolbar.getComponent('ReportReportExportPdfButton').enable();
        toolbar.getComponent('ReportReportExportCsvButton').enable();
        toolbar.getComponent('ReportReportExportXmlButton').enable();
        toolbar.getComponent('ReportReportExportXsdButton').enable();

        var store = Ext.getStore('ReportFilterJsonStore');

        store.on('load', function(store, records) {
            var filterFormPanel = panel.getComponent('ReportFilterFormPanel');
            filterFormPanel.removeAll();

            for(var idx in records) {
                r = records[idx];
                switch(r.data.report_filtertype.key) {
                    case 'combobox':
                    console.log('combobox');
                    config = JSON.parse(r.data.jsonparam);
                    console.log(config);
                    filterFormPanel.add(
                    Ext.create('Ext.form.field.ComboBox', config)
                    );
                    break;
                    case 'datetime':
                    console.log('datefield');
                    config = JSON.parse(r.data.jsonparam);
                    console.log(config);
                    filterFormPanel.add(
                    Ext.create('Ext.form.field.Date', config)
                    );
                    break;
                    case 'string':
                    console.log('textfield');
                    config = JSON.parse(r.data.jsonparam);
                    console.log(config);
                    filterFormPanel.add(
                    Ext.create('Ext.form.field.Text', config)
                    );
                    break;
                    case 'integer':
                    console.log('integer');
                    config = JSON.parse(r.data.jsonparam);
                    console.log(config);
                    filterFormPanel.add(
                    Ext.create('Ext.form.field.Number', config)
                    );
                    break;
                    case 'checkbox':
                    config = JSON.parse(r.data.jsonparam);
                    filterFormPanel.add(
                    Ext.create('Ext.form.field.Checkbox', config)
                    );
                    break;
                }
            }

        });

        store.clearFilter(true);
        store.filter([{property:"report_report_id",value:record.data.id}]);
        store.load();
    }

});