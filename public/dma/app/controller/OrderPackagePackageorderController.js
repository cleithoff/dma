/*
 * File: app/controller/OrderPackagePackageorderController.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.OrderPackagePackageorderController', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            autoCreate: true,
            ref: 'OrderPackagePackageorderPanel',
            selector: '#OrderPackagePackageorderPanel',
            xtype: 'orderpackagepackageorderpanel'
        },
        {
            autoCreate: true,
            ref: 'OrderPanel',
            selector: '#OrderPanel',
            xtype: 'orderpanel'
        }
    ],

    onOrderPackagePackageorderEditButtonClick: function(button, e, eOpts) {
        var panel = this.getOrderPackagePackageorderPanel();
        var formPanel = panel.getComponent('OrderPackagePackageorderFormPanel');
        var toolbar = panel.getComponent('OrderPackagePackageorderToolbar');
        formPanel.enable();

        toolbar.getComponent('OrderPackagePackageorderEditButton').disable();
        //toolbar.getComponent('OrderItemPackagePackageNewButton').disable();
        toolbar.getComponent('OrderPackagePackageorderCancelButton').enable();
        toolbar.getComponent('OrderPackagePackageorderSaveButton').enable();
        toolbar.getComponent('OrderPackagePackageorderDeleteButton').disable();

    },

    onOrderPackagePackageorderSaveButtonClick: function(button, e, eOpts) {
        // var store = Ext.getStore('OrderPackagePackageorderJsonStore');

        var panel = this.getOrderPackagePackageorderPanel();
        var store = panel.down('#OrderPackagePackageorderGridPanel').getStore();
        var formPanel = panel.getComponent('OrderPackagePackageorderFormPanel');
        var toolbar = panel.getComponent('OrderPackagePackageorderToolbar');

        //grid = button.ownerCt.ownerCt.ownerCt.query('#" . $name . "GridPanel')[0];

        var record = formPanel.getForm().getRecord();
        if (record !== undefined && (record.data.id === undefined || record.data.id == 0)) {
            values = formPanel.getForm().getValues();
            record.set(values);
            store.insert(0, record);
        } else {
            formPanel.getForm().updateRecord();
        }
        formPanel.disable();

        toolbar.getComponent('OrderPackagePackageorderCancelButton').disable();
        toolbar.getComponent('OrderPackagePackageorderSaveButton').disable();

        if (panel.getComponent('OrderPackagePackageorderGridPanel').getSelectionModel().getSelection().length > 0) {
            toolbar.getComponent('OrderPackagePackageorderEditButton').enable();
            toolbar.getComponent('OrderPackagePackageorderDeleteButton').enable();
        } else {
            toolbar.getComponent('OrderPackagePackageorderEditButton').disable();
            toolbar.getComponent('OrderPackagePackageorderDeleteButton').disable();
        }
    },

    onOrderPackagePackageorderCancelButtonClick: function(button, e, eOpts) {
        var panel = this.getOrderPackagePackageorderPanel();
        var grid = panel.getComponent('OrderPackagePackageorderGridPanel');

        var formPanel = panel.getComponent('OrderPackagePackageorderFormPanel');
        var toolbar = panel.getComponent('OrderPackagePackageorderToolbar');
        var record = formPanel.getForm().getRecord();								
        if (record !== undefined) {
            formPanel.getForm().reset();
            formPanel.disable();

            //toolbar.getComponent('OrderItemPackagePackageNewButton').enable();
            toolbar.getComponent('OrderPackagePackageorderCancelButton').disable();
            toolbar.getComponent('OrderPackagePackageorderSaveButton').disable();
            if (grid.getSelectionModel().getSelection().length > 0) {
                toolbar.getComponent('OrderPackagePackageorderEditButton').enable();
                toolbar.getComponent('OrderPackagePackageorderDeleteButton').enable();
            } else {
                toolbar.getComponent('OrderPackagePackageorderEditButton').disable();
                toolbar.getComponent('OrderPackagePackageorderDeleteButton').disable();
            }    
        }

    },

    onOrderPackagePackageorderDeleteButtonClick: function(button, e, eOpts) {
        var store = Ext.getStore('PackagePackageorderJsonStore');
        var panel = this.getOrderItemPackagePackagePanel(); 
        var grid = panel.getComponent('OrderItemPackagePackageGridPanel');

        var that = this;

        Ext.Msg.confirm('Attention!', 'Datensatz lÃ¶schen?', function(btn) {
            if(btn == 'yes') {
                //grid = button.ownerCt.ownerCt.ownerCt.query('#" . $name . "GridPanel')[0];

                formPanel = panel.getComponent('OrderPackagePackageorderFormPanel');
                record = formPanel.getForm().getRecord();
                if (store !== undefined && record !== undefined) {
                    store.remove(record);
                    formPanel.getForm().reset();
                    if(grid !== undefined && grid.getView().getNodes().length > 0) {
                        grid.getView().select(0);
                    }
                }
            }
        });

        if (panel.getComponent('OrderPackagePackageorderGridPanel').getSelectionModel().getSelection().length > 0) {
            toolbar.getComponent('OrderPackagePackageorderDeleteButton').enable();
        } else {
            toolbar.getComponent('OrderPackagePackageorderDeleteButton').disable();
        }
    },

    onOrderPackagePackageorderRefreshButtonClick1: function(button, e, eOpts) {

    },

    onOrderPackagePackageorderGridPanelSelect: function(rowmodel, record, index, eOpts) {
        var panel = this.getOrderPackagePackageorderPanel();

        var formPanel = panel.down('#OrderPackagePackageorderFormPanel');
        var toolbar = panel.getComponent('OrderPackagePackageorderToolbar');

        formPanel.getForm().loadRecord(record);
        toolbar.getComponent('OrderPackagePackageorderEditButton').enable();
        toolbar.getComponent('OrderPackagePackageorderCancelButton').disable();
        toolbar.getComponent('OrderPackagePackageorderSaveButton').disable();
        toolbar.getComponent('OrderPackagePackageorderDeleteButton').enable();
    },

    init: function(application) {
        this.control({
            "#OrderPackagePackageorderEditButton": {
                click: this.onOrderPackagePackageorderEditButtonClick
            },
            "#OrderPackagePackageorderSaveButton": {
                click: this.onOrderPackagePackageorderSaveButtonClick
            },
            "#OrderPackagePackageorderCancelButton": {
                click: this.onOrderPackagePackageorderCancelButtonClick
            },
            "#OrderPackagePackageorderDeleteButton": {
                click: this.onOrderPackagePackageorderDeleteButtonClick
            },
            "#OrderPackagePackageorderRefreshButton": {
                click: this.onOrderPackagePackageorderRefreshButtonClick1
            },
            "#OrderPackagePackageorderGridPanel": {
                select: this.onOrderPackagePackageorderGridPanelSelect
            }
        });
    }

});
