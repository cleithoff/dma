/*
 * File: app/controller/OrderItemOrderMetaController.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.OrderItemOrderMetaController', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            autoCreate: true,
            ref: 'OrderItemOrderMetaPanel',
            selector: '#OrderItemOrderMetaPanel',
            xtype: 'orderitemordermetapanel'
        },
        {
            autoCreate: true,
            ref: 'OrderItemPanel',
            selector: '#OrderItemPanel',
            xtype: 'orderitempanel'
        }
    ],

    onOrderItemOrderMetaEditButtonClick: function(button, e, eOpts) {
        var panel = this.getOrderItemOrderMetaPanel();

        var formPanel = panel.getComponent('OrderItemOrderMetaFormPanel');
        var toolbar = panel.getComponent('OrderItemOrderMetaToolbar');
        formPanel.enable();

        toolbar.getComponent('OrderItemOrderMetaEditButton').disable();
        toolbar.getComponent('OrderItemOrderMetaNewButton').disable();
        toolbar.getComponent('OrderItemOrderMetaCancelButton').enable();
        toolbar.getComponent('OrderItemOrderMetaSaveButton').enable();
        toolbar.getComponent('OrderItemOrderMetaDeleteButton').disable();

    },

    onOrderItemOrderMetaNewButtonClick: function(button, e, eOpts) {
        var store = Ext.getStore('OrderItemHasOrderMetaJsonStore');
        var panel = this.getOrderItemOrderMetaPanel();

        var formPanel = panel.getComponent('OrderItemOrderMetaFormPanel');
        var toolbar = panel.getComponent('OrderItemOrderMetaToolbar');


        if (store !== undefined) {
            //formPanel = button.ownerCt.ownerCt.ownerCt.query('#" . $name . "FormPanel')[0];
            formPanel.enable();
            record = new store.model();
            record.data.order_item_id = this.getOrderItemPanel().getComponent('OrderItemGridPanel').getSelectionModel().getSelection()[0].data.id;
            formPanel.loadRecord(record);
            toolbar.getComponent('OrderItemOrderMetaEditButton').disable();
            toolbar.getComponent('OrderItemOrderMetaNewButton').disable();
            toolbar.getComponent('OrderItemOrderMetaCancelButton').enable();
            toolbar.getComponent('OrderItemOrderMetaSaveButton').enable();
            toolbar.getComponent('OrderItemOrderMetaDeleteButton').disable();

            //Ext.getStore('OrderItemProductItemJsonStore').on('load', function(store, records, options){
            combobox = this.getOrderItemOrderMetaPanel().getComponent('OrderItemOrderMetaFormPanel').getComponent('OrderMetaComboBox');
            combobox.store.reload();
            //});

            //Ext.getStore('OrderItemProductItemJsonStore').clearFilter(true);
            //Ext.getStore('OrderItemProductItemJsonStore').filter([{property:'id',value:Ext.getStore('OrderItemProductItemJsonStore').first().data.id}]);
            //Ext.getStore('OrderItemProductItemJsonStore').load();    



        }
    },

    onOrderItemOrderMetaSaveButtonClick: function(button, e, eOpts) {
        store = Ext.getStore('OrderItemHasOrderMetaJsonStore');
        panel = this.getOrderItemOrderMetaPanel();

        formPanel = panel.getComponent('OrderItemOrderMetaFormPanel');
        toolbar = panel.getComponent('OrderItemOrderMetaToolbar');

        //grid = button.ownerCt.ownerCt.ownerCt.query('#" . $name . "GridPanel')[0];

        record = formPanel.getForm().getRecord();

        if (record !== undefined && (record.data.id === undefined || record.data.id == 0)) {
            values = formPanel.getForm().getValues();
            record.set(values);
            store.insert(0, record);
            /*grid = button.ownerCt.ownerCt.ownerCt.getComponent('" . $name . 'GridPanel' . "');*/
            //if (grid !== undefined) {
            /*grid.getView().select(0);*/ /* BUG!!! */
            //}
        } else {
            formPanel.getForm().updateRecord();
        }
        formPanel.disable();
        toolbar.getComponent('OrderItemOrderMetaNewButton').enable();
        toolbar.getComponent('OrderItemOrderMetaCancelButton').disable();
        toolbar.getComponent('OrderItemOrderMetaSaveButton').disable();

        if (panel.getComponent('OrderItemOrderMetaGridPanel').getSelectionModel().getSelection().length > 0) {
            toolbar.getComponent('OrderItemOrderMetaEditButton').enable();
            toolbar.getComponent('OrderItemOrderMetaDeleteButton').enable();
        } else {
            toolbar.getComponent('OrderItemOrderMetaEditButton').disable();
            toolbar.getComponent('OrderItemOrderMetaDeleteButton').disable();
        }
    },

    onOrderItemOrderMetaCancelButtonClick: function(button, e, eOpts) {
        panel = this.getOrderItemOrderMetaPanel();
        grid = panel.getComponent('OrderItemOrderMetaGridPanel');

        formPanel = panel.getComponent('OrderItemOrderMetaFormPanel');
        toolbar = panel.getComponent('OrderItemOrderMetaToolbar');
        record = formPanel.getForm().getRecord();								
        if (record !== undefined) {
            formPanel.getForm().reset();
            formPanel.disable();

            toolbar.getComponent('OrderItemOrderMetaNewButton').enable();
            toolbar.getComponent('OrderItemOrderMetaCancelButton').disable();
            toolbar.getComponent('OrderItemOrderMetaSaveButton').disable();
            if (grid.getSelectionModel().getSelection().length > 0) {
                toolbar.getComponent('OrderItemOrderMetaEditButton').enable();
                toolbar.getComponent('OrderItemOrderMetaDeleteButton').enable();
            } else {
                toolbar.getComponent('OrderItemOrderMetaEditButton').disable();
                toolbar.getComponent('OrderItemOrderMetaDeleteButton').disable();
            }    
        }

        if(grid !== undefined && grid.getSelectionModel().getSelection().length > 0) {
            record = grid.getSelectionModel().getSelection()[0];
            formPanel.getForm().loadRecord(record);
        }
    },

    onOrderItemOrderMetaDeleteButtonClick: function(button, e, eOpts) {
        var store = Ext.getStore('OrderItemHasOrderMetaJsonStore');
        var panel = this.getOrderItemOrderMetaPanel(); 
        var grid = panel.getComponent('OrderItemOrderMetaGridPanel');

        var that = this;

        Ext.Msg.confirm('Attention!', 'Datensatz lÃ¶schen?', function(btn) {
            if(btn == 'yes') {
                //grid = button.ownerCt.ownerCt.ownerCt.query('#" . $name . "GridPanel')[0];

                formPanel = panel.getComponent('OrderItemOrderMetaFormPanel');
                record = formPanel.getForm().getRecord();
                if (store !== undefined && record !== undefined) {
                    store.remove(record);
                    formPanel.getForm().reset();
                    if(grid !== undefined && grid.getView().getNodes().length > 0) {
                        grid.getView().select(0);
                    }
                }
            }
        });

        if (panel.getComponent('OrderItemOrderMetaGridPanel').getSelectionModel().getSelection().length > 0) {
            toolbar.getComponent('OrderItemOrderMetaDeleteButton').enable();
        } else {
            toolbar.getComponent('OrderItemOrderMetaDeleteButton').disable();
        }
    },

    onOrderItemOrderMetaGridPanelSelect: function(rowmodel, record, index, eOpts) {
        panel = this.getOrderItemOrderMetaPanel();

        formPanel = panel.getComponent('OrderItemOrderMetaFormPanel');
        toolbar = panel.getComponent('OrderItemOrderMetaToolbar');

        formPanel.getForm().loadRecord(record);
        toolbar.getComponent('OrderItemOrderMetaEditButton').enable();
        toolbar.getComponent('OrderItemOrderMetaNewButton').enable();
        toolbar.getComponent('OrderItemOrderMetaCancelButton').disable();
        toolbar.getComponent('OrderItemOrderMetaSaveButton').disable();
        toolbar.getComponent('OrderItemOrderMetaDeleteButton').enable();
    },

    init: function(application) {
        this.control({
            "#OrderItemOrderMetaEditButton": {
                click: this.onOrderItemOrderMetaEditButtonClick
            },
            "#OrderItemOrderMetaNewButton": {
                click: this.onOrderItemOrderMetaNewButtonClick
            },
            "#OrderItemOrderMetaSaveButton": {
                click: this.onOrderItemOrderMetaSaveButtonClick
            },
            "#OrderItemOrderMetaCancelButton": {
                click: this.onOrderItemOrderMetaCancelButtonClick
            },
            "#OrderItemOrderMetaDeleteButton": {
                click: this.onOrderItemOrderMetaDeleteButtonClick
            },
            "#OrderItemOrderMetaGridPanel": {
                select: this.onOrderItemOrderMetaGridPanelSelect
            }
        });
    }

});
