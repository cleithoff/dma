/*
 * File: app/controller/OrderItemDetailPanelController.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.OrderItemDetailPanelController', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            autoCreate: true,
            ref: 'OrderItemDetailPanel',
            selector: '#OrderItemDetailPanel',
            xtype: 'orderitemdetailpanel'
        },
        {
            autoCreate: true,
            ref: 'OrderItemPanel',
            selector: '#OrderItemPanel',
            xtype: 'orderitempanel'
        }
    ],

    onOrderItemDetailEditButtonClick: function(button, e, eOpts) {
        panel = this.getOrderItemDetailPanel();

        formPanel = panel.getComponent('OrderItemDetailFormPanel');
        toolbar = panel.getComponent('OrderItemDetailToolbar');
        formPanel.enable();

        toolbar.getComponent('OrderItemDetailEditButton').disable();
        //toolbar.getComponent('OrderItemDetailNewButton').disable();
        toolbar.getComponent('OrderItemDetailCancelButton').enable();
        toolbar.getComponent('OrderItemDetailSaveButton').enable();
        toolbar.getComponent('OrderItemDetailDeleteButton').disable();

    },

    onOrderItemDetailSaveButtonClick: function(button, e, eOpts) {
        var that = this;

        store = Ext.getStore('OrderItemJsonStore');
        panel = this.getOrderItemDetailPanel();

        formPanel = panel.getComponent('OrderItemDetailFormPanel');
        toolbar = panel.getComponent('OrderItemDetailToolbar');

        //grid = button.ownerCt.ownerCt.ownerCt.query('#" . $name . "GridPanel')[0];

        record = formPanel.getForm().getRecord();

        /*
        record.store.on('write', function(store,options) {
        if (record.data.authkey !== null) {
        that.getOrderItemDetailPanel().getComponent('PreviewContainer').update('<embed style="width:100%;height:100%" src="/deploy/' + record.data.authkey + '.pdf" alt="pdf" pluginspage="http://www.adobe.com/products/acrobat/readstep2.html">'); 
        }
        });
        */

        if (record !== undefined && (record.data.id === undefined || record.data.id == 0)) {
            values = formPanel.getForm().getValues();
            record.set(values);
            store.insert(0, record);
            /*grid = button.ownerCt.ownerCt.ownerCt.getComponent('" . $name . 'GridPanel' . "');*/
            //if (grid !== undefined) {
            /*grid.getView().select(0);*/ /* BUG!!! */
            //}
        } else {
            formPanel.getForm().updateRecord();
        }
        formPanel.disable();
        //toolbar.getComponent('OrderItemDetailNewButton').enable();
        toolbar.getComponent('OrderItemDetailCancelButton').disable();
        toolbar.getComponent('OrderItemDetailSaveButton').disable();

        panel = this.getOrderItemPanel();

        if (panel.getComponent('OrderItemGridPanel').getSelectionModel().getSelection().length > 0) {
            toolbar.getComponent('OrderItemDetailEditButton').enable();
            toolbar.getComponent('OrderItemDetailDeleteButton').enable();
        } else {
            toolbar.getComponent('OrderItemDetailEditButton').disable();
            toolbar.getComponent('OrderItemDetailDeleteButton').disable();
        }
    },

    onOrderItemDetailCancelButtonClick: function(button, e, eOpts) {
        panel = this.getOrderItemDetailPanel();
        grid = this.getOrderItemPanel().getComponent('OrderItemGridPanel');

        formPanel = panel.getComponent('OrderItemDetailFormPanel');
        toolbar = panel.getComponent('OrderItemDetailToolbar');
        record = formPanel.getForm().getRecord();								
        if (record !== undefined) {
            formPanel.getForm().reset();
            formPanel.disable();

            //toolbar.getComponent('OrderItemDetailNewButton').enable();
            toolbar.getComponent('OrderItemDetailCancelButton').disable();
            toolbar.getComponent('OrderItemDetailSaveButton').disable();
            if (grid.getSelectionModel().getSelection().length > 0) {
                toolbar.getComponent('OrderItemDetailEditButton').enable();
                toolbar.getComponent('OrderItemDetailDeleteButton').enable();
            } else {
                toolbar.getComponent('OrderItemDetailEditButton').disable();
                toolbar.getComponent('OrderItemDetailDeleteButton').disable();
            }    
        }

        if(grid !== undefined && grid.getSelectionModel().getSelection().length > 0) {
            //grid.getView().select(0);
            record = grid.getSelectionModel().getSelection()[0];
            formPanel.getForm().loadRecord(record);
        }
    },

    onOrderItemDetailDeleteButtonClick: function(button, e, eOpts) {
        var store = Ext.getStore('OrderItemJsonStore');
        var panel = this.getOrderItemDetailPanel(); 
        var grid = this.getOrderItemPanel().getComponent('OrderItemGridPanel');

        var that = this;

        Ext.Msg.confirm('Attention!', 'Datensatz lÃ¶schen?', function(btn) {
            if(btn == 'yes') {
                //grid = button.ownerCt.ownerCt.ownerCt.query('#" . $name . "GridPanel')[0];

                formPanel = panel.getComponent('OrderItemDetailFormPanel');
                record = formPanel.getForm().getRecord();
                if (store !== undefined && record !== undefined) {
                    store.remove(record);
                    formPanel.getForm().reset();
                    if(grid !== undefined && grid.getView().getNodes().length > 0) {
                        grid.getView().select(0);
                    }
                }
            }
        });

        if (panel.getComponent('OrderItemDetailGridPanel').getSelectionModel().getSelection().length > 0) {
            toolbar.getComponent('OrderItemDetailDeleteButton').enable();
        } else {
            toolbar.getComponent('OrderItemDetailDeleteButton').disable();
        }
    },

    onOrderItemViewmodePrintBackMenuItemClick: function(item, e, eOpts) {
        var that = this;
        var record = this.getOrderItemPanel().getComponent('OrderItemGridPanel').getSelectionModel().getSelection()[0];

        if (record === undefined) return;

        Ext.Ajax.request({
            url: '/order/item/refresh',
            success: function() {
                that.getOrderItemDetailPanel().getComponent('PreviewContainer').update('<embed src="/deploy/' + record.data.authkey + '_print_back.pdf" alt="pdf" style="width:100%;height:100%" pluginspage="http://www.adobe.com/products/acrobat/readstep2.html">');
            },
            failure: function() {},
            params: { id: record.data.id, viewmode: 4, refresh: 0}
        });
    },

    onOrderItemDetailRefreshButtonClick: function(button, e, eOpts) {
        var that = this;
        var record = this.getOrderItemPanel().getComponent('OrderItemGridPanel').getSelectionModel().getSelection()[0];

        if (record === undefined) return;

        var view = null;

        menu = this.getOrderItemDetailPanel().getComponent('OrderItemDetailToolbar').getComponent('OrderItemViewmodeButton').menu;
        menu.items.each(function(menuitem){ if(menuitem.checked){view=menuitem;} });

        if (view.suffix === undefined || view.suffix === null) {
            view.suffix = '';
        }

        Ext.Ajax.request({
            url: '/order/item/refresh',

            success: function() {
                that.getOrderItemDetailPanel().getComponent('PreviewContainer').update('<embed src="/deploy/' + record.data.authkey + view.suffix + '.pdf?_dc=' + (new Date().getTime()) + '" alt="pdf" style="width:100%;height:100%" pluginspage="http://www.adobe.com/products/acrobat/readstep2.html">');
            },
            failure: function() {},
            params: { 
                id: record.data.id,    
                viewmode: view.value,
                refresh: 1
            }
        });
    },

    onOrderItemDetailPreviewButtonClick: function(button, e, eOpts) {
        var record = this.getOrderItemPanel().getComponent('OrderItemGridPanel').getSelectionModel().getSelection()[0];

        if (record === undefined) return;

        this.getOrderItemDetailPanel().getComponent('PreviewContainer').update('<embed style="width:100%;height:100%" src="/deploy/' + record.data.authkey + '.pdf" alt="pdf" pluginspage="http://www.adobe.com/products/acrobat/readstep2.html">');
    },

    onOrderItemDetailSendButtonClick: function(button, e, eOpts) {
        var that = this;
        var record = this.getOrderItemPanel().getComponent('OrderItemGridPanel').getSelectionModel().getSelection()[0];

        if (record === undefined) return;

        Ext.Ajax.request({
            url: '/order/item/send',
            success: function(response) {
                try {
                    r = JSON.parse(response.responseText);
                    if (r['success'] !== undefined && r.success === true) {
                        alert('E-Mail wurde versendet.');
                    } else {
                        alert('Die E-Mail konnte nicht versendet werden.');	
                    }
                } catch(ex) {
                    alert('Die E-Mail konnte nicht versendet werden.');
                }        
            },
            failure: function() {
                alert('Die E-Mail konnte nicht versendet werden.');
            },
            params: { id: record.data.id}
        });
    },

    onOrderItemstatelogGridPanelSelect: function(rowmodel, record, index, eOpts) {
        this.getOrderItemDetailPanel().getComponent('OrderItemstatelogGridPanel').getComponent('OrderItemstatelogFormPanel').getForm().loadRecord(record);
    },

    onOrderItemViewmodePreviewFrontMenuItemClick: function(item, e, eOpts) {
        var that = this;
        var record = this.getOrderItemPanel().getComponent('OrderItemGridPanel').getSelectionModel().getSelection()[0];

        if (record === undefined) return;

        Ext.Ajax.request({
            url: '/order/item/refresh',
            success: function() {
                that.getOrderItemDetailPanel().getComponent('PreviewContainer').update('<embed src="/deploy/' + record.data.authkey + '.pdf" alt="pdf" style="width:100%;height:100%" pluginspage="http://www.adobe.com/products/acrobat/readstep2.html">');
            },
            failure: function() {},
            params: { id: record.data.id, viewmode: 1, refresh: 0}
        });
    },

    onOrderItemViewmodePreviewBackMenuItemClick: function(item, e, eOpts) {
        var that = this;
        var record = this.getOrderItemPanel().getComponent('OrderItemGridPanel').getSelectionModel().getSelection()[0];

        if (record === undefined) return;

        Ext.Ajax.request({
            url: '/order/item/refresh',
            success: function() {
                that.getOrderItemDetailPanel().getComponent('PreviewContainer').update('<embed src="/deploy/' + record.data.authkey + '_preview_back.pdf" alt="pdf" style="width:100%;height:100%" pluginspage="http://www.adobe.com/products/acrobat/readstep2.html">');
            },
            failure: function() {},
            params: { id: record.data.id, viewmode: 2, refresh: 0}
        });
    },

    onOrderItemViewmodePrintFrontMenuItemClick: function(item, e, eOpts) {
        var that = this;
        var record = this.getOrderItemPanel().getComponent('OrderItemGridPanel').getSelectionModel().getSelection()[0];

        if (record === undefined) return;

        Ext.Ajax.request({
            url: '/order/item/refresh',
            success: function() {
                that.getOrderItemDetailPanel().getComponent('PreviewContainer').update('<embed src="/deploy/' + record.data.authkey + '_print_front.pdf" alt="pdf" style="width:100%;height:100%" pluginspage="http://www.adobe.com/products/acrobat/readstep2.html">');
            },
            failure: function() {},
            params: { id: record.data.id, viewmode: 3, refresh: 0}
        });
    },

    init: function(application) {
        this.control({
            "#OrderItemDetailEditButton": {
                click: this.onOrderItemDetailEditButtonClick
            },
            "#OrderItemDetailSaveButton": {
                click: this.onOrderItemDetailSaveButtonClick
            },
            "#OrderItemDetailCancelButton": {
                click: this.onOrderItemDetailCancelButtonClick
            },
            "#OrderItemDetailDeleteButton": {
                click: this.onOrderItemDetailDeleteButtonClick
            },
            "#OrderItemViewmodePrintBackMenuItem": {
                click: this.onOrderItemViewmodePrintBackMenuItemClick
            },
            "#OrderItemDetailRefreshButton": {
                click: this.onOrderItemDetailRefreshButtonClick
            },
            "#OrderItemDetailPreviewButton": {
                click: this.onOrderItemDetailPreviewButtonClick
            },
            "#OrderItemDetailSendButton": {
                click: this.onOrderItemDetailSendButtonClick
            },
            "#OrderItemstatelogGridPanel": {
                select: this.onOrderItemstatelogGridPanelSelect
            },
            "#OrderItemViewmodePreviewFrontMenuItem": {
                click: this.onOrderItemViewmodePreviewFrontMenuItemClick
            },
            "#OrderItemViewmodePreviewBackMenuItem": {
                click: this.onOrderItemViewmodePreviewBackMenuItemClick
            },
            "#OrderItemViewmodePrintFrontMenuItem": {
                click: this.onOrderItemViewmodePrintFrontMenuItemClick
            }
        });
    }

});
