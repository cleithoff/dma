/*
 * File: app/controller/AppHelpController.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.AppHelpController', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            autoCreate: true,
            ref: 'AppHelpPanel',
            selector: '#AppHelpPanel',
            xtype: 'apphelppanel'
        }
    ],

    onAppHelpEditButtonClick: function(button, e, eOpts) {
        panel = this.getAppHelpPanel();

        formPanel = panel.down('#AppHelpFormPanel');
        toolbar = panel.down('#AppHelpToolbar');
        formPanel.enable();

        toolbar.getComponent('AppHelpEditButton').disable();
        toolbar.getComponent('AppHelpNewButton').disable();
        toolbar.getComponent('AppHelpCancelButton').enable();
        toolbar.getComponent('AppHelpSaveButton').enable();
        toolbar.getComponent('AppHelpDeleteButton').disable();

    },

    onAppHelpNewButtonClick: function(button, e, eOpts) {
        var me = this;

        var panel = me.getAppHelpPanel();

        var formPanel = panel.down('#AppHelpFormPanel');
        var toolbar = panel.down('#AppHelpToolbar');
        var grid = panel.getComponent('AppHelpGridPanel');

        store = grid.getStore();

        if (store !== undefined) {
            formPanel.enable();
            record = new store.model();
            formPanel.loadRecord(record);
            toolbar.getComponent('AppHelpEditButton').disable();
            toolbar.getComponent('AppHelpNewButton').disable();
            toolbar.getComponent('AppHelpCancelButton').enable();
            toolbar.getComponent('AppHelpSaveButton').enable();
            toolbar.getComponent('AppHelpDeleteButton').disable();

        }

    },

    onAppHelpSaveButtonClick: function(button, e, eOpts) {
        var me = this;

        var panel = me.getAppHelpPanel();

        var grid = panel.getComponent('AppHelpGridPanel');
        var store = grid.getStore();

        var formPanel = panel.getComponent('AppHelpFormPanel');
        var toolbar = panel.getComponent('AppHelpToolbar');

        var record = formPanel.getForm().getRecord();
        if (record !== undefined && (record.data.id === undefined || record.data.id == 0)) {
            values = formPanel.getForm().getValues();
            record.set(values);
            store.insert(0, record);
        } else {
            formPanel.getForm().updateRecord();
        }
        formPanel.disable();

        toolbar.getComponent('AppHelpEditButton').enable();
        toolbar.getComponent('AppHelpNewButton').enable();
        toolbar.getComponent('AppHelpCancelButton').disable();
        toolbar.getComponent('AppHelpSaveButton').disable();
        toolbar.getComponent('AppHelpDeleteButton').enable();
    },

    onAppHelpCancelButtonClick: function(button, e, eOpts) {
        var me = this;

        var panel = me.getAppHelpPanel();
        var grid = panel.getComponent('AppHelpGridPanel');

        var formPanel = panel.getComponent('AppHelpFormPanel');
        var toolbar = panel.getComponent('AppHelpToolbar');
        var record = formPanel.getForm().getRecord();								
        if (record !== undefined) {
            formPanel.getForm().reset();
            formPanel.disable();
            toolbar.getComponent('AppHelpEditButton').enable();
            toolbar.getComponent('AppHelpNewButton').enable();
            toolbar.getComponent('AppHelpCancelButton').disable();
            toolbar.getComponent('AppHelpSaveButton').disable();  
            toolbar.getComponent('AppHelpDeleteButton').disable(); 
        }

        if(grid !== undefined && grid.getView().getNodes().length > 0) {
            grid.getView().select(0);
            record = grid.getSelectionModel().getSelection()[0];
            formPanel.getForm().loadRecord(record);
        }
    },

    onAppHelpDeleteButtonClick: function(button, e, eOpts) {
        var that = this;

        var panel = that.getAppHelpPanel();

        var formPanel = panel.getComponent('AppHelpFormPanel');
        var toolbar = panel.getComponent('AppHelpToolbar');
        var grid = panel.getComponent('AppHelpGridPanel');
        var store = grid.getStore();

        Ext.Msg.confirm('Achtung!', 'Datensatz lÃ¶schen?', function(btn) {
            if(btn == 'yes') {

                toolbar.getComponent('AppHelpEditButton').disable();
                toolbar.getComponent('AppHelpNewButton').disable();
                toolbar.getComponent('AppHelpCancelButton').disable();
                toolbar.getComponent('AppHelpSaveButton').disable();
                toolbar.getComponent('AppHelpDeleteButton').disable();

                record = formPanel.getForm().getRecord();
                if (store !== undefined && record !== undefined) {
                    store.remove(record);
                    formPanel.getForm().reset();
                    if(grid !== undefined && grid.getView().getNodes().length > 0) {
                        grid.getView().select(0);
                    }
                }
            }
        });
    },

    onAppHelpGridPanelSelect: function(rowmodel, record, index, eOpts) {
        var that = this;

        var panel = that.getAppHelpPanel();
        var formPanel = panel.getComponent('AppHelpFormPanel');
        var toolbar = panel.getComponent('AppHelpToolbar');

        formPanel.getForm().loadRecord(record);

        toolbar.getComponent('AppHelpEditButton').enable();
        toolbar.getComponent('AppHelpNewButton').enable();
        toolbar.getComponent('AppHelpCancelButton').disable();
        toolbar.getComponent('AppHelpSaveButton').disable();
        toolbar.getComponent('AppHelpDeleteButton').enable();
    },

    init: function(application) {
        this.control({
            "#AppHelpEditButton": {
                click: this.onAppHelpEditButtonClick
            },
            "#AppHelpNewButton": {
                click: this.onAppHelpNewButtonClick
            },
            "#AppHelpSaveButton": {
                click: this.onAppHelpSaveButtonClick
            },
            "#AppHelpCancelButton": {
                click: this.onAppHelpCancelButtonClick
            },
            "#AppHelpDeleteButton": {
                click: this.onAppHelpDeleteButtonClick
            },
            "#AppHelpGridPanel": {
                select: this.onAppHelpGridPanelSelect
            }
        });
    }

});
